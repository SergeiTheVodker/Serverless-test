# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: sargedines
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: serverless-miniproject
# "service" is the name of this project. This will also be added to your AWS resource names.
service: serverless-mini-project

provider:
  name: aws
  runtime: python3.12
  logs:
    http: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
          Resource:
            - arn:aws:s3:::my-test-bucket-for-mini-serverless-project/apiconfig.json
  # Uncomment to easily set up a custom domain. Read the docs for more details:
  # https://www.serverless.com/framework/docs/providers/aws/guide/domains
  # domain: api.example.com

layers:
  requests2:
    path: requests-layer
    description: the requests library for python
    compatibleRuntimes: 
      - python3.12

functions:
  auth:
    handler: TestLambda_Authorizer.index.lambda_handler
  ApiGet:
    handler: app.index.common_handler
    timeout: 10
    layers:
      - !Ref Requests2LambdaLayer
    events:
      - http:
          path: /get/api-test
          method: get
          authorizer: auth
  ApiPost:
    handler: app.index.common_handler
    timeout: 10
    layers:
      - !Ref Requests2LambdaLayer
    events:
      - http:
          path: /post/api-test
          method: post
          authorizer: auth
  ApiPut:
    handler: app.index.common_handler
    timeout: 10
    layers:
      - !Ref Requests2LambdaLayer
    events:
      - http:
          path: /put/api-test
          method: put
          authorizer: auth

      